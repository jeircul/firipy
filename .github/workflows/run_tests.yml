name: Run Tests

on:
  push:
  pull_request:
  schedule:
    - cron: '0 0 * * *'

env:
  API_KEY_FIRI: ${{ secrets.API_KEY_FIRI }}

jobs:
  tests:
    name: Test (Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12', '3.13']
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip

      - name: Install project (editable with dev extras)
        run: |
          python -m pip install --upgrade pip
          python -m pip install -e '.[dev]'

      - name: Lint (ruff)
        run: ruff check .

      - name: Type check (mypy)
        run: mypy firipy

      - name: Run tests with coverage
        run: pytest --cov=firipy --cov-report=xml --cov-report=term-missing

      - name: Upload coverage artifact
        if: ${{ matrix.python-version == '3.13' }}
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml

  build-validation:
    name: Build distribution (Python 3.13)
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.13'
      - name: Install build deps
        run: |
          python -m pip install --upgrade pip
          python -m pip install build twine
      - name: Build
        run: python -m build
      - name: Twine check
        run: python -m twine check dist/*
